// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String
  email     String    @unique
  password  String
  role      Role
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Company   Company[]
  shops     Store[]   @relation("StoreStaffs")
  Token     Token[]
}

enum Role {
  ADMIN
  OWNER
  CASHIER
  MANAGER
}

model Token {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expireAt  DateTime
}

model Company {
  id           String     @id @default(cuid())
  ownerId      String
  owner        User       @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  company_name String
  company_logo String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  deletedAt    DateTime?
  store        Store[]
  Category     Category[]
  Brand        Brand[]
  Customer     Customer[]
  Supplier     Supplier[]
}

model Store {
  id             String    @id @default(cuid())
  store_name     String
  store_phone    String
  store_email    String
  store_location String
  store_city     String
  store_country  String
  companyId      String
  company        Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
  staffs         User[]    @relation("StoreStaffs")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
}

model Category {
  id            String    @id @default(cuid())
  category_name String
  companyId     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
  company       Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model Brand {
  id         String    @id @default(cuid())
  brand_name String
  companyId  String
  brand_logo String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?
  company    Company   @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model Customer {
  id               String    @id @default(cuid())
  customer_name    String
  customer_phone   String?
  customer_email   String?
  customer_address String?
  customer_city    String?
  customer_country String?
  companyId        String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?

  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
}

model Supplier {
  id               String    @id @default(cuid())
  supplier_name    String
  supplier_email   String?   @unique
  supplier_phone   String?
  supplier_address String?
  supplier_city    String?
  supplier_country String?
  companyId        String
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?

  company Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
}
